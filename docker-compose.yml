version: '3'

networks:
  pipeline-network:
    driver: bridge

volumes:
  cassandra-volume:
  zookeeper_data:
    driver: local
  kafka_data_0:
    driver: local

services:

  # Zookeeper
  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - pipeline-network
    logging:
      driver: "none"

  # Kafka infrastructure
  kafka_0:
    image: 'bitnami/kafka:latest'
    container_name: kafka_0
    restart: always
    ports:
      - '9091:9091'
      - '29091:29091'
    networks:
      - pipeline-network
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9091,PLAINTEXT_HOST://:29091
      - KAFKA_CFG_NUM_IO_THREADS=1
      - KAFKA_CFG_NUM_NETWORK_THREADS=1
      - KAFKA_CFG_BACKGROUND_THREADS=1
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka_0:9091,PLAINTEXT_HOST://kafka_0:29091
    volumes:
      - 'kafka_data_0:/bitnami'
    depends_on:
      - zookeeper
    logging:
      driver: "none"

  # Simulation
  simulation:
    container_name: simulation
    networks:
      - pipeline-network
    build: simulation
    environment:
      - kafka_brokers=kafka_0:29091
      - kafka_topic=simulation_updates
    depends_on:
      - zookeeper
      - kafka_0
    logging:
      driver: "none"

  # MongoDB instance
  mongo_1:
    image: 'mongo'
    container_name: mongo_1
    environment:
      - MONGO_INITDB_DATABASE=flowio
      - MONGODB_INITDB_ROOT_USERNAME=wacc
      - MONGODB_INITDB_ROOT_PASSWORD=wacc
    networks:
      - pipeline-network
    volumes:
      - ./mongoDB/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - '27017:27017'
    logging:
      driver: "none"

  # Cassandra infrastructure
  cassandra-cluster:
    container_name: cassandra-cluster
    restart: always
    build: ./cassandra/
    environment:
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=1024M
    networks:
      - pipeline-network
    volumes:
      - cassandra-volume:/var/lib/cassandra
    expose:
      - 7000
      - 7001
      - 7199
      - 9042
      - 9160
    logging:
      driver: "none"

  #  Inserts data into cassandra
  cassandra_injector:
    container_name: cassandra_injector
    restart: always
    build: cassandra_injector
    environment:
      - kafka_brokers=kafka_0:29091
      - kafka_topic=simulation_updates
      - cassandra_instances=cassandra-cluster;cassandra-cluster;cassandra-cluster
    ports:
      - 4004:4004
    networks:
      - pipeline-network
    depends_on:
      - cassandra-cluster
      - kafka_0
    logging:
      driver: "none"

  # Flow.io backend
  websocket-backend:
    container_name: websocket-backend
    networks:
      - pipeline-network
    build: websocket_backend
    environment:
      - kafka_brokers=kafka_0:29091
      - kafka_topic=simulation_updates
      - port=4002
      - startupTimeout=30000
    ports:
      - '4002:4002'
    depends_on:
      - zookeeper
      - kafka_0
  #      logging:
  #        driver: "none"

  backend:
    container_name: backend
    restart: always
    networks:
      - pipeline-network
    build: backend_loadbalancer
    ports:
      - '4003:4003'
    depends_on:
      - backend_0
      - backend_1
    logging:
      driver: "none"

  backend_0:
    container_name: backend_0
    networks:
      - pipeline-network
    build: backend
    environment:
      - port=4103
      - mongoose_uri=mongodb://mongo_1:27017/flowio
      - startupTimeout=15000
    ports:
      - '4103:4103'
    depends_on:
      - cassandra-cluster
      - mongo_1
    restart: always
  #    logging:
  #      driver: "none"

  backend_1:
    container_name: backend_1
    networks:
      - pipeline-network
    build: backend
    environment:
      - port=4203
      - mongoose_uri=mongodb://mongo_1:27017/flowio
      - startupTimeout=15000
    ports:
      - '4203:4203'
    depends_on:
      - cassandra-cluster
      - mongo_1
    restart: always
  #    logging:
  #      driver: "none"

  # Flow.io frontend
  vue_frontend_loadbalancer:
    container_name: vue_frontend_loadbalancer
    restart: always
    networks:
      - pipeline-network
    build: vue_frontend_loadbalancer
    ports:
      - '8080:80'
    depends_on:
      - vue_frontend_0
      - vue_frontend_1
    logging:
      driver: "none"

  vue_frontend_0:
    container_name: vue_frontend_0
    networks:
      - pipeline-network
    build: vue_frontend
    expose:
      - 80
    depends_on:
      - backend
      - websocket-backend
    logging:
      driver: "none"

  vue_frontend_1:
    container_name: vue_frontend_1
    networks:
      - pipeline-network
    build: vue_frontend
    expose:
      - 80
    depends_on:
      - backend
      - websocket-backend
    logging:
      driver: "none"

# React frontend
  frontend:
    container_name: frontend
    networks:
      - pipeline-network
    build: frontend
    environment:
      - port=3000
      - startupTimeout=35000
    ports:
      - '3000:3000'
    command: npm start
    depends_on:
      - backend
      - websocket-backend
    stdin_open: true
     # logging:
     #   driver: "none"
